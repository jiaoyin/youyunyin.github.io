{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"youyunyin","url":"http://youyunyin.com"},"pages":[{"title":"团队","date":"2018-10-09T07:12:08.368Z","updated":"2018-10-09T07:12:08.368Z","comments":false,"path":"about/index.html","permalink":"http://youyunyin.com/about/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-10-08T06:43:00.254Z","updated":"2018-10-08T06:43:00.254Z","comments":false,"path":"categories/index.html","permalink":"http://youyunyin.com/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-10-08T06:35:00.794Z","updated":"2018-10-08T06:35:00.794Z","comments":true,"path":"links/index.html","permalink":"http://youyunyin.com/links/index.html","excerpt":"","text":""},{"title":"前端导航","date":"2018-10-09T07:49:43.604Z","updated":"2018-10-09T07:49:43.604Z","comments":false,"path":"nav/index.html","permalink":"http://youyunyin.com/nav/index.html","excerpt":"","text":"导航"},{"title":"Repositories","date":"2018-10-08T06:14:46.354Z","updated":"2018-10-08T06:14:46.353Z","comments":false,"path":"repository/index.html","permalink":"http://youyunyin.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-10-08T06:44:07.229Z","updated":"2018-10-08T06:44:07.228Z","comments":false,"path":"tags/index.html","permalink":"http://youyunyin.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"hexo结合gitpage搭建无限空间静态博客","slug":"hexo结合gitpage搭建无限空间静态博客","date":"2018-10-18T16:00:00.000Z","updated":"2018-10-19T08:15:26.494Z","comments":true,"path":"2018/10/19/hexo结合gitpage搭建无限空间静态博客/","link":"","permalink":"http://youyunyin.com/2018/10/19/hexo结合gitpage搭建无限空间静态博客/","excerpt":"","text":"什么是HexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。生成静态网页即可托管到任何支持静态网页的服务器上。 什么是GitPageGitHub Pages 与GitHub同属一个研发组织，免费为你的GitHub项目提供项目部署和托管服务，一个GitHub账号可以创建一个GitPage空间。GitPage支持静态和markdown语法的项目，并与GitHub上的项目实时同步自动渲染。所以你可以很容易使用GitPage搭建自己的博客。 特别注意：一个GitHub账号只能创建一个GitPage空间，并且名称有特殊要求下文详细说明。 可选框架：jekyll 环境准备12nodejsGit 创建github账号和同名项目 申请账号如:wangzhikui 创建同名项目:wangzhikui.github.io 如图: 进入项目的【setting &gt; GitHub Pages】 如图： 按照描述设置开启即可。 到此为止GitPages已经可以使用，提交到wangzhikui.github.io的静态或markdown形式的文件会自动同步到GitPages空间。可通过http://wangzhikui.github.io访问。 配置域名(无此需要可跳过)一、上一步GitPages设置中设置域名如：wushuning.com二、配置域名的A地址和CNAME别名本域名在阿里云申请，所以登录aliyun.com进入域名配置，域名解析做如下配置 三、项目根目录中添加名为CNAME的文件，内容为 wushuning.com hexo使用安装hexo并使用hexo创建项目安装hexo脚手架工具并使用脚手架创建项目12345npm install hexo-cli -ghexo init wangzhikuiblogcd wangzhikuiblognpm installhexo server 全局安装脚手架hexo-cli 创建一个名为wangzhikuiblog的项目 进入项目目录 安装依赖包 启动服务 服务启动成功出现如下图： 通过http://localhost:4000访问示例程序到此使用hexo创建项目已经完成 手动部署进入项目目录运行命令1hexo g 则会在项目路径中生成一个public文件夹，里边的内容即为hexo为我们生成的所有静态文件。手动将public里边的所有文件git传到wangzhikui.github.io即可。 到此可通过http://wangzhikui.bighub.io或域名（如果配置了）http://wushuning.com访问你的网站。 自动部署打开项目根目录下的_config.yml 找到如下配置:1234deploy: type: git repo: github: git@github.com:wangzhikui/wangzhikui.github.io.git 运行命令1hexo d 则将public下的文件部署到wangzhikui.github.io.git上，我这里只有一个分支master，所以默认，如果要填写分支可以配置repo。建议保持一个分支就可以了。 hexo d 命令push代码使用的是ssh，所以需要配置github的ssh key 关于key生成配置这里不赘述。 注：如果本地要维护两个github账号，这种情况有可能遇到ssh key冲突，该情况在下一篇博文描述 hexo生成的项目目录结构简介使用hexo创建的项目路径如下图： 项目源码 hexo常用命令 命令 简写 描述 hexo server hexo s 启动服务 hexo generate hexo g 生成静态文件 hexo deploy hexo d 将静态文件部署到github上 hexo clean 无 清除缓存文件 (db.json) 和已生成的静态文件 (public) 查看更多命令: hexo 命令大全 本人在部署的时候喜欢使用三个命令组合123hexo cleanhexo ghexo d 使用主题主题文件存放在 /themes下。本博客基于主题hexo-theme-pure 修改而来。大家也可前往hexo 主题库 下载自己需要的主题。 下载主题后放入/thems下 打开项目根目录的配置文件._config.yml.修改配置theme为你主题的文件夹名称即可1theme: hexo-theme-yyy 创建博文通过命令进入项目目录1hexo new test 常见一篇名为test.md的博文，路径在/source/_posts/test.md打开test.md使用markdown编辑即可。 手动创建直接在_posts文件夹下创建一个test.md的文件即可 未完待续 hexo的_config.yml和themes_config.yml分别有哪些重要配置 hexo中博文md文件都有哪些配置 hexo\b中使用gitalk添加评论功能 一个hexo主题\b都包含什么，如何入手修改主题满足自己个性化设置 本地同时维护两个github账号如何设置ssh key","categories":[{"name":"博客","slug":"博客","permalink":"http://youyunyin.com/categories/博客/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://youyunyin.com/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://youyunyin.com/tags/github/"},{"name":"gitpage","slug":"gitpage","permalink":"http://youyunyin.com/tags/gitpage/"}]},{"title":"web全栈技术图谱v1.0","slug":"web全栈技术图谱v1-0","date":"2018-10-17T16:00:00.000Z","updated":"2018-10-19T01:32:42.743Z","comments":true,"path":"2018/10/18/web全栈技术图谱v1-0/","link":"","permalink":"http://youyunyin.com/2018/10/18/web全栈技术图谱v1-0/","excerpt":"","text":"近期一直在研究数据可视化产品，技术栈也不断变宽，变深。根据自己接触到的技术体系整理了一个web全栈技术图谱v1.0。做个记录","categories":[{"name":"技术图谱","slug":"技术图谱","permalink":"http://youyunyin.com/categories/技术图谱/"}],"tags":[{"name":"技术图谱","slug":"技术图谱","permalink":"http://youyunyin.com/tags/技术图谱/"},{"name":"前端","slug":"前端","permalink":"http://youyunyin.com/tags/前端/"}]},{"title":"markdown常用语法","slug":"markdown","date":"2018-09-30T16:00:00.000Z","updated":"2018-10-18T02:36:43.503Z","comments":true,"path":"2018/10/01/markdown/","link":"","permalink":"http://youyunyin.com/2018/10/01/markdown/","excerpt":"","text":"本文参考 Github markdown 基本写法，更多详细描述可直接前往Github查看 标题文字前使用(1-6个)#，不同数量代表文字不一样大小 标题1标题2标题3标题4标题5标题6123456# 标题1## 标题2### 标题3#### 标题4##### 标题5###### 标题6 文本样式 样式 语法 快捷键 示例 效果 粗体 ** **或__ __ command/control + b **Hello World** Hello World 斜体 * *或_ _ command/control + i *Hello World* Hello World 删除 ~~ ~~ 无 ~~Hello World~~ Hello World 粗体&amp;斜体 ~~ ~~和_ _ 无 **Hello _World_** Hello World 表格源码123456| 样式 | 语法 | 快捷键 | 示例 | 效果 ||:----|:----:|-----:|-----:|----:|| 粗体 | `** **`或`__ __` | command/control + b | `**Hello World**` | **Hello World**|| 斜体 | `* *`或`_ _` | command/control + i | `*Hello World*` | *Hello World* || 删除 | `~~ ~~` | 无 | `~~Hello World~~` | ~~Hello World~~ || 粗体&amp;斜体 | `~~ ~~`和`_ _` | 无 | `**Hello _World_**` | **Hello _World_** | 引用文本使用 &gt;，可以使用多个&gt;来嵌套 被引用的文字 被引用的文字2 被引用的文字3 123&gt; 被引用的文字&gt;&gt; 被引用的文字2&gt;&gt;&gt; 被引用的文字3 引用代码使用如下标志将文字包含即可 12345使用``` ``` 将代码包含即可也可以加上语言来使得块中语法高亮 ``` java ``` javascript ``` html 基础\b格式123git statusgit addgit commit java123public static void main(String[] args)&#123; System.out.print(\"Hello World\")&#125; javascript123function sayHello()&#123; console.log('Hello World')&#125; html123&lt;div&gt; &lt;h1&gt; Hello World &lt;/h1&gt;&lt;/div&gt; Github使用Linguist进行语言检测，并选择第三方语法进行语法突出显示。您可以在YAML文件中找到哪些关键字是有效的。 链接1[友云音](http://yyy.yonyoucloud.com) 友云音 链接可以使用相对地址 语法 目录 / 根目录 ./ 当前目录 ../ 上级目录 1[友云音logo](/images/logo/youyunyin-logo.png) 友云音logo 部分链接当我们写好md发布渲染生成html之后，当鼠标移动到某一块的头部的时候会显示#（也有可能是其他图表），点击之后地址栏会生成一个部分连接。使用该地址栏的地址访问该文章会自动定位到点击的这个块。比如本文的地址是:http://youyunyin.com/2018/10/01/markdown/点击[文本样式]这个标题，地址\b栏url变为http://youyunyin.com/2018/10/01/markdown/#文本样式点击改链接就会直接进入该页面并跳转到[文本样式]块中 列表使用 - 或者 * 第1行 第2行 第2-1行 第2-1-1行 第2-1-2行 第2-2行 第3行 1234567- 第1行- 第2行 - 第2-1行 - 第2-1-1行 - 第2-1-2行 - 第2-2行- 第3行 使用数字 第1行 第2行 第3行 1231. 第1行2. 第2行3. 第3行 任务列表（gihub扩展，非标准markdown） 任务1 任务2 任务3 123- [x] 任务1- [ ] 任务2- [ ] 任务3 段落文字后面输入两个空格换行 图片1![友云音logo](/images/logo/youyunyin-logo.png &quot;友云音logo&quot;) 分割线使用 三个以上 - 或 *1234-------*******","categories":[{"name":"markdown","slug":"markdown","permalink":"http://youyunyin.com/categories/markdown/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://youyunyin.com/tags/markdown/"},{"name":"博客","slug":"博客","permalink":"http://youyunyin.com/tags/博客/"}]}]}